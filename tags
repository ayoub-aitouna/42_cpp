!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Account	00/ex02/Account.cpp	/^Account::Account()$/;"	f	class:Account
Account	00/ex02/Account.cpp	/^Account::Account(int initial_deposit)$/;"	f	class:Account
Account	00/ex02/Account.hpp	/^class Account$/;"	c
Add	00/ex01/PhoneBook.cpp	/^void PhoneBook::Add(Contact &new_contact)$/;"	f	class:PhoneBook
AddContact	00/ex01/main.cpp	/^void AddContact(PhoneBook &phoneBook)$/;"	f
CONTACT_HPP	00/ex01/Contact.hpp	2;"	d
CPPFLAGS	00/ex00/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	00/ex01/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	00/ex02/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	01/ex00/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	01/ex01/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	01/ex02/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
CPPFLAGS	01/ex03/Makefile	/^CPPFLAGS = -Wall -Wextra -Werror -std=c++98$/;"	m
Contact	00/ex01/Contact.cpp	/^Contact::Contact()$/;"	f	class:Contact
Contact	00/ex01/Contact.cpp	/^Contact::Contact(Contact &contact_instance)$/;"	f	class:Contact
Contact	00/ex01/Contact.cpp	/^Contact::Contact(std::string m_first_name, std::string m_last_name, std::string m_nickname, std::string m_darkest_secret, std::string m_phone_number)$/;"	f	class:Contact
Contact	00/ex01/Contact.hpp	/^class Contact{$/;"	c
Display	00/ex01/Contact.cpp	/^std::string Contact::Display(int id)$/;"	f	class:Contact
GetFirstName	00/ex01/Contact.cpp	/^std::string Contact::GetFirstName()$/;"	f	class:Contact
GetLastName	00/ex01/Contact.cpp	/^std::string Contact::GetLastName()$/;"	f	class:Contact
GetNickName	00/ex01/Contact.cpp	/^std::string Contact::GetNickName()$/;"	f	class:Contact
GetPhoneNumebr	00/ex01/Contact.cpp	/^std::string Contact::GetPhoneNumebr()$/;"	f	class:Contact
GetSecret	00/ex01/Contact.cpp	/^std::string Contact::GetSecret()$/;"	f	class:Contact
HUMANA_HPP	01/ex03/HumanA.hpp	2;"	d
HUMANB_HPP	01/ex03/HumanB.hpp	2;"	d
HumanA	01/ex03/HumanA.hpp	/^class HumanA{$/;"	c
HumanB	01/ex03/HumanB.cpp	/^HumanB::HumanB(std::string name, Weapon &weapon)$/;"	f	class:HumanB
HumanB	01/ex03/HumanB.hpp	/^class HumanB{$/;"	c
List	00/ex01/PhoneBook.cpp	/^void PhoneBook::List()$/;"	f	class:PhoneBook
NAME	00/ex00/Makefile	/^NAME = MegaPhone$/;"	m
NAME	00/ex01/Makefile	/^NAME = MyPhoneBook$/;"	m
NAME	00/ex02/Makefile	/^NAME = MyBank$/;"	m
NAME	01/ex00/Makefile	/^NAME = BraiiiiiiinnnzzzZ$/;"	m
NAME	01/ex01/Makefile	/^NAME = Moar_brainz$/;"	m
NAME	01/ex02/Makefile	/^NAME = Brain$/;"	m
NAME	01/ex03/Makefile	/^NAME = Brain$/;"	m
OBJ	00/ex00/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	00/ex01/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	00/ex02/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	01/ex00/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	01/ex01/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	01/ex02/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	01/ex03/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
PHONE_BOOK_HPP	00/ex01/PhoneBook.hpp	2;"	d
PhoneBook	00/ex01/PhoneBook.cpp	/^PhoneBook::PhoneBook()$/;"	f	class:PhoneBook
PhoneBook	00/ex01/PhoneBook.hpp	/^class PhoneBook$/;"	c
PrintRow	00/ex01/PhoneBook.cpp	/^void PrintRow(std::string val1, std::string val2, std::string val3, std::string val4)$/;"	f
Print_Line	00/ex01/PhoneBook.cpp	/^void Print_Line(int len)$/;"	f
SRC	00/ex00/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	00/ex01/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	00/ex02/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	01/ex00/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	01/ex01/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	01/ex02/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
SRC	01/ex03/Makefile	/^SRC = $(wildcard *.cpp)$/;"	m
Search	00/ex01/PhoneBook.cpp	/^void PhoneBook::Search(int index)$/;"	f	class:PhoneBook
SetFirstName	00/ex01/Contact.cpp	/^void Contact::SetFirstName(std::string name)$/;"	f	class:Contact
SetLastName	00/ex01/Contact.cpp	/^void Contact::SetLastName(std::string name)$/;"	f	class:Contact
SetNickName	00/ex01/Contact.cpp	/^void Contact::SetNickName(std::string name)$/;"	f	class:Contact
SetPhoneNumber	00/ex01/Contact.cpp	/^void Contact::SetPhoneNumber(std::string number)$/;"	f	class:Contact
SetSecret	00/ex01/Contact.cpp	/^void Contact::SetSecret(std::string secret)$/;"	f	class:Contact
UserInput	00/ex01/main.cpp	/^void UserInput(PhoneBook &phoneBook)$/;"	f
WEAPON_HPP	01/ex03/weapon.hpp	2;"	d
Weapon	01/ex03/weapon.cpp	/^Weapon::Weapon(std::string type)$/;"	f	class:Weapon
Weapon	01/ex03/weapon.hpp	/^class Weapon {$/;"	c
ZOMBIE_H	01/ex00/Zombie.h	2;"	d
ZOMBIE_H	01/ex01/Zombie.h	2;"	d
ZOMBIE_HPP	01/ex00/Zombie.hpp	2;"	d
ZOMBIE_HPP	01/ex01/Zombie.hpp	2;"	d
Zombie	01/ex00/Zombie.cpp	/^Zombie::Zombie()$/;"	f	class:Zombie
Zombie	01/ex00/Zombie.cpp	/^Zombie::Zombie(std::string name)$/;"	f	class:Zombie
Zombie	01/ex00/Zombie.hpp	/^class Zombie$/;"	c
Zombie	01/ex01/Zombie.cpp	/^Zombie::Zombie()$/;"	f	class:Zombie
Zombie	01/ex01/Zombie.cpp	/^Zombie::Zombie(std::string name)$/;"	f	class:Zombie
Zombie	01/ex01/Zombie.hpp	/^class Zombie$/;"	c
__ACCOUNT_H__	00/ex02/Account.hpp	12;"	d
_accountIndex	00/ex02/Account.hpp	/^    int _accountIndex;$/;"	m	class:Account
_amount	00/ex02/Account.hpp	/^    int _amount;$/;"	m	class:Account
_displayTimestamp	00/ex02/Account.cpp	/^void Account::_displayTimestamp(void)$/;"	f	class:Account
_nbAccounts	00/ex02/Account.cpp	/^int Account::_nbAccounts = 0;$/;"	m	class:Account	file:
_nbAccounts	00/ex02/Account.hpp	/^    static int _nbAccounts;$/;"	m	class:Account
_nbDeposits	00/ex02/Account.hpp	/^    int _nbDeposits;$/;"	m	class:Account
_nbWithdrawals	00/ex02/Account.hpp	/^    int _nbWithdrawals;$/;"	m	class:Account
_totalAmount	00/ex02/Account.cpp	/^int Account::_totalAmount = 0;$/;"	m	class:Account	file:
_totalAmount	00/ex02/Account.hpp	/^    static int _totalAmount;$/;"	m	class:Account
_totalNbDeposits	00/ex02/Account.cpp	/^int Account::_totalNbDeposits = 0;$/;"	m	class:Account	file:
_totalNbDeposits	00/ex02/Account.hpp	/^    static int _totalNbDeposits;$/;"	m	class:Account
_totalNbWithdrawals	00/ex02/Account.cpp	/^int Account::_totalNbWithdrawals = 0;$/;"	m	class:Account	file:
_totalNbWithdrawals	00/ex02/Account.hpp	/^    static int _totalNbWithdrawals;$/;"	m	class:Account
announce	01/ex00/Zombie.cpp	/^void Zombie::announce(void)$/;"	f	class:Zombie
announce	01/ex01/Zombie.cpp	/^void Zombie::announce(void)$/;"	f	class:Zombie
checkAmount	00/ex02/Account.cpp	/^int Account::checkAmount(void) const$/;"	f	class:Account
displayAccountsInfos	00/ex02/Account.cpp	/^void Account::displayAccountsInfos(void)$/;"	f	class:Account
displayStatus	00/ex02/Account.cpp	/^void Account::displayStatus(void) const$/;"	f	class:Account
getNbAccounts	00/ex02/Account.cpp	/^int Account::getNbAccounts(void)$/;"	f	class:Account
getNbDeposits	00/ex02/Account.cpp	/^int Account::getNbDeposits(void)$/;"	f	class:Account
getNbWithdrawals	00/ex02/Account.cpp	/^int Account::getNbWithdrawals(void)$/;"	f	class:Account
getTotalAmount	00/ex02/Account.cpp	/^int Account::getTotalAmount(void)$/;"	f	class:Account
getType	01/ex03/weapon.cpp	/^std::string Weapon::getType()$/;"	f	class:Weapon
index	00/ex01/PhoneBook.hpp	/^	int index;$/;"	m	class:PhoneBook
m_contact	00/ex01/PhoneBook.hpp	/^	Contact m_contact[8];$/;"	m	class:PhoneBook
m_darkest_secret	00/ex01/Contact.hpp	/^		std::string m_darkest_secret;$/;"	m	class:Contact
m_first_name	00/ex01/Contact.hpp	/^		std::string m_first_name;$/;"	m	class:Contact
m_last_name	00/ex01/Contact.hpp	/^		std::string m_last_name;$/;"	m	class:Contact
m_nickname	00/ex01/Contact.hpp	/^		std::string m_nickname;$/;"	m	class:Contact
m_phone_number	00/ex01/Contact.hpp	/^		std::string m_phone_number;$/;"	m	class:Contact
main	00/ex00/MegaPhone.cpp	/^int main(int ac, char **av)$/;"	f
main	00/ex01/main.cpp	/^int main(void)$/;"	f
main	00/ex02/tests.cpp	/^int main(void)$/;"	f
main	01/ex00/main.cpp	/^int main()$/;"	f
main	01/ex01/main.cpp	/^int main(void)$/;"	f
main	01/ex02/main.cpp	/^int main(void)$/;"	f
main	01/ex03/main.cpp	/^int main(void)$/;"	f
makeDeposit	00/ex02/Account.cpp	/^void Account::makeDeposit(int deposit)$/;"	f	class:Account
makeWithdrawal	00/ex02/Account.cpp	/^bool Account::makeWithdrawal(int withdrawal)$/;"	f	class:Account
name	01/ex00/Zombie.hpp	/^    std::string name;$/;"	m	class:Zombie
name	01/ex01/Zombie.hpp	/^    std::string name;$/;"	m	class:Zombie
name	01/ex03/HumanA.hpp	/^		std::string name;$/;"	m	class:HumanA
name	01/ex03/HumanB.hpp	/^		std::string name;$/;"	m	class:HumanB
newZombie	01/ex00/newZombie.cpp	/^Zombie *newZombie(std::string name)$/;"	f
printInBox	00/ex01/PhoneBook.cpp	/^void printInBox(std::string value)$/;"	f
randomChump	01/ex00/randomChump.cpp	/^void randomChump(std::string name)$/;"	f
setType	01/ex03/weapon.cpp	/^void Weapon::setType(std::string type)$/;"	f	class:Weapon
t	00/ex02/Account.hpp	/^    typedef Account t;$/;"	t	class:Account
type	01/ex03/weapon.hpp	/^		std::string type;$/;"	m	class:Weapon
weapon	01/ex03/HumanA.hpp	/^		Weapon &weapon;$/;"	m	class:HumanA
weapon	01/ex03/HumanB.hpp	/^		Weapon weapon;$/;"	m	class:HumanB
zombieHorde	01/ex01/ZombieHorde.cpp	/^Zombie* zombieHorde( int N, std::string name )$/;"	f
~Account	00/ex02/Account.cpp	/^Account::~Account()$/;"	f	class:Account
~Contact	00/ex01/Contact.cpp	/^Contact::~Contact()$/;"	f	class:Contact
~PhoneBook	00/ex01/PhoneBook.cpp	/^PhoneBook::~PhoneBook()$/;"	f	class:PhoneBook
~Weapon	01/ex03/weapon.cpp	/^Weapon::~Weapon()$/;"	f	class:Weapon
~Zombie	01/ex00/Zombie.cpp	/^Zombie::~Zombie()$/;"	f	class:Zombie
~Zombie	01/ex01/Zombie.cpp	/^Zombie::~Zombie()$/;"	f	class:Zombie
